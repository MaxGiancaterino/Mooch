# import * from "./generated/prisma.graphql"

type Query {
  me: User!
  users(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [User!]!
  groups: [Group!]!
  group(where: GroupWhereUniqueInput!): Group!
  payments(id: ID!): Group!
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createGroup(data: GroupCreateInput!): Group!
  createPayment(data: PaymentCreateInput!): Payment!
  updateGroup(data: GroupUpdateInput!, where: GroupWhereUniqueInput!): Group!
  updatePayment(
    data: PaymentUpdateInput!
    where: PaymentWhereUniqueInput!
  ): Payment!
  deletePayment(where: PaymentWhereUniqueInput!): Payment!
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
}
